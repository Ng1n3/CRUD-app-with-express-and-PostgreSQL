version: '3.4'

services:
  app:
    image: simple-crud-app-with-express-and-postgres
    env_file:
      - path: ./production.env
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ['sh', './wait-for-it.sh', 'db', '5432', '--', 'npm', 'start']
    environment:
      - NODE_ENV=production
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - PORT=3000
    ports:
      - 3000:3000
    depends_on:
      - db
        # condition: service_healthy
    networks:
      - backend

  db:
    image: postgres:alpine
    env_file:
      - path: ./production.env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ['CMD', 'pg_isready -U ${DB_USERNAME}']
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
